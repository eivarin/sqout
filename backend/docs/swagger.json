{
    "swagger": "2.0",
    "info": {
        "description": "sqout a modular application, implement every metric you want",
        "title": "sqout",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "paths": {
        "/modules": {
            "get": {
                "description": "Get JSON of all the modules",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "modules"
                ],
                "summary": "GET all the modules in the database",
                "responses": {
                    "200": {
                        "description": "Array of existing modules",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ModuleConfig.ModuleConfig"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Update the JSON of the matching module",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "modules"
                ],
                "summary": "PUT update a given module in the database",
                "responses": {
                    "200": {
                        "description": "Module updated successfully!",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new module",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "modules"
                ],
                "summary": "POST a new module in the database",
                "parameters": [
                    {
                        "description": "Module to be added",
                        "name": "module",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/modules.PostBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Module added successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/modules/{module_name}": {
            "get": {
                "description": "Get JSON of a given module name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "modules"
                ],
                "summary": "GET specific module in the database",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Module Name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Module",
                        "schema": {
                            "$ref": "#/definitions/ModuleConfig.ModuleConfig"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete the module with the given name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "modules"
                ],
                "summary": "DELETE a given module in the database",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Module Name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Module deleted successfully!",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/probes": {
            "get": {
                "description": "Retrieve all probes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "probes"
                ],
                "summary": "GET all probes",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Include results in response",
                        "name": "includeResults",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of probes",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/probes.ProbeResponse"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new probe and run it",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "probes"
                ],
                "summary": "POST a new probe on the database",
                "parameters": [
                    {
                        "description": "Probe information",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/probes.postBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Probe created successfully!",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/probes/{name}": {
            "get": {
                "description": "Retrieve a specific probe by its name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "probes"
                ],
                "summary": "GET a specific probe by name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Probe Name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "Include results in response",
                        "name": "includeResults",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Probe details",
                        "schema": {
                            "$ref": "#/definitions/probes.ProbeResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a probe by its name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "probes"
                ],
                "summary": "DELETE a probe by name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Probe Name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Probe deleted successfully!",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "ModuleConfig.Flag": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "isEmpty": {
                    "type": "boolean"
                },
                "prefix": {
                    "type": "string"
                },
                "required": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "ModuleConfig.ModuleConfig": {
            "type": "object",
            "properties": {
                "exe": {
                    "$ref": "#/definitions/ModuleConfig.exe"
                },
                "gitInfo": {
                    "type": "object",
                    "properties": {
                        "branch": {
                            "type": "string"
                        },
                        "commit": {
                            "type": "string"
                        }
                    }
                },
                "id": {
                    "type": "string"
                },
                "isRepo": {
                    "type": "boolean"
                },
                "path": {
                    "type": "string"
                }
            }
        },
        "ModuleConfig.exe": {
            "type": "object",
            "properties": {
                "commandName": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "flags": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/ModuleConfig.Flag"
                    }
                },
                "flagsOrder": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "keepAlive": {
                    "type": "boolean"
                }
            }
        },
        "modules.PostBody": {
            "type": "object",
            "properties": {
                "Branch": {
                    "type": "string"
                },
                "Commit": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                }
            }
        },
        "probes.ProbeResponse": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "alive": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "heartbitInterval": {
                    "type": "integer"
                },
                "module": {
                    "type": "string"
                },
                "options": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "results": {
                    "description": "swagger can't find type definitiion bson.a",
                    "type": "array",
                    "items": {}
                }
            }
        },
        "probes.postBody": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "heartbitInterval": {
                    "type": "integer"
                },
                "moduleName": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "options": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        }
    }
}